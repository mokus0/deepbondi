#!/usr/bin/perl
#
#  <cabalTemplate>
#    Copyright 2008 James Cook - All Rights Reserved.
#
#

use strict;

my ($file) = @ARGV;

my $year = `date +%Y`;
chomp $year;

my $fullName = `fullName -n`;

open DIRNAME, "-|", "dirname", $file or die "Can't open dirname command";
my $dirname = <DIRNAME>;
chomp $dirname;
close DIRNAME;

if (! defined $file) {
    $file = `basename \`pwd\``;
    chomp $file;
}

my $noExt = $file;
$noExt =~ s/\.cabal$//i;

if ($noExt eq $file) {
	$file = $file . ".cabal"
}

my $setup = "$dirname/Setup.lhs";
if (! -e $setup) {
        open SETUP, ">", $setup;
        
        print SETUP <<HASKELL;
#!/usr/bin/env runhaskell

> import Distribution.Simple
> main = defaultMain

HASKELL
        close SETUP;
}

my $srcDir = ".";

if (! -x "$dirname/src") {
    $srcDir = "src" if mkdir "$dirname/src";
}

if (-d "$dirname/src") {
    $srcDir = "src";
}

open OUTFILE, ">", $file;

print OUTFILE <<CABAL;
name:                   $noExt
version:                0.0.0.1
stability:              experimental

cabal-version:          >= 1.2
build-type:             Simple

author:                 $fullName <your email here>
maintainer:             $fullName <your email here>
license:                Unspecified
homepage:               /dev/null

category:               Unclassified
synopsis:               I'm too lame to describe my project
description:            I'm too lame to describe my project

Library
  hs-source-dirs:       $srcDir
  exposed-modules:      
  build-depends:        base >= 3
CABAL

close OUTFILE;

my $cwd = `pwd`;
chomp $cwd;

if (! -x "$dirname/_darcs" && ! -x "$dirname/.git") {
    chdir $dirname
    and 0 == system "git", "init"
    or die "Failed to initialize git repository";
    chdir $cwd;
}

if (-x "$dirname/_darcs" ) {
    chdir $dirname
    and rename "_darcs/prefs/boring", ".boring"
    and open BORINGFILE, ">>", ".boring"
    and print BORINGFILE "(^|/)dist(/|\$)\n"
    and close BORINGFILE
    and 0 == system "darcs add .boring"
    and 0 == system "darcs setpref boringfile .boring"
    and 0 == system "darcs record -a -m 'initializing repository' -A 'cabalTemplate script'"
    and 0 == system "darcs add Setup.lhs src *.cabal"
    or die "Failed to record initial darcs patch";
    
    chdir $cwd;
}

if (-x "$dirname/.git" ) {
    chdir $dirname
    and 0 == system "gitignore Global/macOS Haskell > .gitignore"
    and 0 == system "git add .gitignore"
    and 0 == system "git commit -m 'initializing repository' --author='cabalTemplate script <bitbucket\@dev.null>'"
    and 0 == system "git add Setup.lhs src *.cabal"
    or die "Failed to record initial git commit";
    
    chdir $cwd;
}

# warning; if extending here, be aware that the previous part
# only makes a very rudimentary effort to ensure that the PWD is unchanged.
