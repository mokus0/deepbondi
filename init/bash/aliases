#
#  <aliases>
#    Copyright 2007-2008 James Cook - All Rights Reserved.
#
#  Originally based on MIT Project Athena's TCSH scripts, circa 1990.
#  These have long since taken on a life of their own.
#
#  Note that some of these things are not aliases, but shell functions;
#  I'm leaving them here, though, because they basically serve the same
#  purpose as was originally intended by these things.
#

alias l='ls -lg'
alias ll='ls -lag'
alias lsd='ls -ld'

#
# handy things
#
function forever {
	"$@" && forever "$@"
}

function withDelay {
	sleep 1 && "$@"
}

function noFail {
	"$@"
	true
}

#
# aliases to catch various common typos
#
# "r/eal" = "clear" with right hand off-by-one on dvorak
# some versions of bash forbid '/' in alias names, so this
# is a function instead.
function r/eal { clear; }

# "c;ear" = "clear" with right hand off-by-one on qwerty
function c {
	# if there's a real program called "c", call it
	if cmdExists c; then
		command c "$@"
	# otherwise, if we were called without args, rig up the trap door
	elif [ X"$*" == X ]; then
		echo "$0: c: command not found"
		
		function ear {
			clear
			unset -f ear
		}
	fi
}

# "je" = "cd" when accidentally typing in qwerty on a dvorak keyboard
alias je=cd

#
# Platform-specific aliases
#
if [ X"$os" == XDarwin ]; then
	function disktool {
		if cmdExists diskutil; then
			echo "disktool is depracted; use diskutil instead"
			echo
		fi
		
		command disktool "$@"
	}
	
	alias eject='diskutil eject'
fi

#
# aliases for ghci addicts
#
if cmdExists ghci; then
	function :b { ghci -e ":browse $*"; }
	function :i { ghci -e ":info $*"; }
	function :t { ghci -e ":type $*"; }
	function :l { pushd "$@"; }
	function :q { popd 2>/dev/null || exit; }
fi

function hasEscapes() {
    grep -q '[[:cntrl:]]'
}

#
# various conditionally defined aliases
#
if cmdExists gls; then
  # use gls if the user went to the trouble of installing it
  alias ls='gls --color=auto'
elif cmdExists colorls; then
  # likewise 'colorls'
  alias ls='colorls'
elif env CLICOLOR_FORCE=1 ls -d / 2>/dev/null | hasEscapes; then
  : # no alias; ls already makes color (note that CLICOLOR_FORCE does
    # not imply CLICOLOR, so this test is valid - at least, on my ls)
elif ls --color=yes -d / 2>/dev/null | hasEscapes; then
  alias ls='ls --color=auto'
elif env CLICOLOR_FORCE=1 ls -Gd / 2>/dev/null | hasEscapes; then
  alias ls='ls -G'
fi

if echo foo | grep --color=yes -e foo 2>/dev/null | hasEscapes; then
  # possibly unreasonable assumption here: assuming grep and egrep
  # always act the same...
  alias grep='grep --color=auto'
  alias egrep='egrep --color=auto'
fi

#
# Read user's aliases
#
if [ -r "${user_bash_initdir}/aliases" ]; then
  source "${user_bash_initdir}/aliases"
fi
