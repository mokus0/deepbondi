#
#  <completions>
#    Copyright 2007 James Cook - All Rights Reserved.
#
#  Originally based on MIT Project Athena's TCSH scripts, circa 1990.
#  These have long since taken on a life of their own.
#
#  Some of these are borrowed from complete.tcsh in the tcsh source tree
#  and from several other sources.
#

# 'plusdirs' check: bash before 3.0-6 didn't support -o plusdirs;
#  detect whether it likes it, and substitute 'dirnames' otherwise.
#  use a real command whose completions we'll set later, so as not
#  to clutter the completion-space.
if complete -o plusdirs cd >/dev/null 2>&1 ; then
	plusdirs=plusdirs
else
	plusdirs=dirnames
fi

# Directories
complete -A directory cd chdir popd pushd rmdir mkdir

# Commands
complete -A command man
complete -A command where which exec trace strace
complete -A command sudo

# Aliases
complete -A alias alias unalias

# Jobs, Processes
complete -A job fg jobs
complete -A signal kill
complete -A stopped bg

# Variables
complete -A variable printenv env export unexport
complete -A shopt shopt
complete -A setopt -A variable set unset

# Key Bindings
complete -A binding bind

# Files by extension
complete -o $plusdirs -f -X '!*gz' gunzip
complete -o $plusdirs -f -X '!*[g.][Zz]' uncompress zcat gzcat
complete -o $plusdirs -f -X '!*t[gba][zr]*' tar gtar gnutar
complete -o $plusdirs -f -X '!*.zip' unzip
complete -o $plusdirs -f -X '!*[.l]hs' runhaskell runghc ghc ghci runhugs hugs

# Hosts
complete -A hostname ftp ncftp telnet ping traceroute ssh rlogin rsh

# Users and Groups
complete -ufo $plusdirs -X '_*' chown
complete -gfo $plusdirs -X '_*' chgrp
complete -uco $plusdirs su sudo
complete -ufo $plusdirs inplace


# darcs completions, if darcs is installed
if cmdExists darcs; then
	source "$deepbondi"/init/bash/completions.darcs
fi

# svn completions, if svn is installed
if cmdExists svn; then
	source "$deepbondi"/init/bash/completions.svn
fi

if cmdExists git; then
    source "$deepbondi"/init/bash/completions.git
    # add $(__git_ps1 " (%s)") to PS1
    PS1=${PS1/\\W/'\W$(__git_ps1 " (%s)")'}
fi

if cmdExists cabal; then
    source "$deepbondi"/init/bash/completions.cabal
fi

#
# Read user's completions
#
if [ -r "$user_bash_initdir"/completions ]; then
	source "$user_bash_initdir"/completions
fi
