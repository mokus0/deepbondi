#
#  <path>
#    Copyright 2007 James Cook - All Rights Reserved.
#
#  Originally based on MIT Project Athena's TCSH scripts, circa 1990.
#  These have long since taken on a life of their own.
#  
#  "path" runs before "interactive", and only once (on the "login" shell)
#

#
#  Save current path
#
path_orig="$PATH"
PATH=/bin:/usr/bin

#
# Set $PATH.  Starts with $deepbondi/bin, and glues bits on.
#   If this is CYGWIN, preserves existing $PATH too, since
#   there's so much crap there
#

if [ "$os" = "Cygwin" ]; then
	# convert environment variables use here to cygwin paths
	if [ X"$GHC_HOME" != X ]; then
		export GHC_HOME=`cygpath "$GHC_HOME"`
	fi
	
	if [ X"$JAVA_HOME" != X ]; then
		export JAVA_HOME=`cygpath "$JAVA_HOME"`
	fi
fi

#initial core
PATH=""

# append whatever actually exists, of these options:
for path in ~/bin \
	"$deepbondi/bin/$os/$arch"  "$deepbondi/bin/$os"  "$deepbondi/bin"  \
	"$deepbondi/sbin/$os/$arch" "$deepbondi/sbin/$os" "$deepbondi/sbin" \
	/Developer/{usr/bin,Tools} \
	"${GHC_HOME:-/nonexistent}/bin" \
	"${JAVA_HOME:-/nonexistent}/bin" \
	/usr/games \
	/Library/Frameworks/*.framework/Versions/{Current,!(Current)}/usr/bin \
	{/usr/local/,/opt/*/,/,/usr/}{,X11/,X11R6/,mysql/}{bin,sbin,texbin}; do
        if [ -d "$path" ]; then
                PATH="$PATH":"$path"
        fi
done

# append original windows paths - necessary for windows
# command-line programs as well as for DLLs
if [ "$os" = "Cygwin" ]; then
	PATH="$PATH:$path_orig"
fi

# strip the leading :
export PATH="${PATH#:}"

#
#  Similar treatment for MANPATH
#
MANPATH=""

for manpath in ~/man \
	{/usr/local/,/opt/*/,/,/usr/}{,X11/,X11R6/,mysql/}{,share/}man ; do
        if [ -d "$manpath" ]; then
                MANPATH="$MANPATH":"$manpath"
        fi
done

# strip the leading :
export MANPATH="${MANPATH#:}"

#
# Setup Fink, if installed
#

if [ -r "/sw/bin/init.sh" ]; then
	source /sw/bin/init.sh
fi


#
# Read user's custom path script
#
if [ -r "${user_bash_initdir}/path" ]; then
	source "${user_bash_initdir}/path"
fi

