#
#  <environment>
#    Copyright 2007 James Cook - All Rights Reserved.
#
#  Originally based on MIT Project Athena's TCSH scripts, circa 1990.
#  These have long since taken on a life of their own.
#

export ENV_SET=yes

# default pager
export PAGER=less

# default character set (but not on obsd, where locale isn't all there)
if [ "$os" != "OpenBSD" ]; then
	export LANG=en_US.UTF-8
fi

# preload CVSROOT with deepbondi's main repo, and make cvs use ssh
export CVSROOT=:ext:archive.deepbondi.net:/archive/cvs
export CVS_RSH=ssh

# files created are -rw-r--r-- by default
umask 022

# colorls settings
export LSCOLORS="GxFxCxDxBxEgEdabagacad"
export CLICOLOR=yes

# enable darcs-client, if installed
if cmdExists darcs-client; then
	export DARCS_APPLY_HTTP="darcs-client apply"
	export DARCS_APPLY_DARCS="darcs-client apply"
	export DARCS_GET_DARCS="darcs-client get"
	export DARCS_MGET_DARCS="darcs-client mget"
	
	# configure darcs ssh id, if suitable things exist
	if [ -f ~/.ssh/darcs-id ]; then
		# unfortunately this doesn't work well because darcs won't
		# expand the ~.  I could use $HOME, but darcs won't strip quotes if
		# i include them, and it won't protect spaces if I don't...
		
		if expr "$HOME" : '.*[ ()&<>]' >/dev/null 2>&1 ; then
			# because darcs-client handles things differently, we cannot simply
			# test for the space, because other things could potentially do a 
			# lot of damage if blindly fed to a shell.  I don't know by what
			# means darcs-client invokes this, actually.
			
			echo 1>&2 Warning: your home directory path contains spaces, so darcs cannot be properly
			echo 1>&2 passed the -i option to use your darcs-id crypto key.
			
			export DARCS_SSH="ssh -i ~/.ssh/darcs-id"
		else
			export DARCS_SSH="ssh -i $HOME/.ssh/darcs-id"
		fi
	fi
fi

#
# Read user's environment
#
if [ -r "${user_bash_initdir}/environment" ]; then
	source "${user_bash_initdir}/environment"
fi
